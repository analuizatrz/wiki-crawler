{{Mergefrom|ASP master pages|date=December 2006}}
'''ASP.NET''' is a set of [[Web development|web application development]] technologies [[marketing|marketed]] by [[Microsoft]]. [[Programmer]]s can use it to build dynamic [[web site]]s, [[web application]]s and [[XML]] [[web service]]s. It is part of Microsoft's [[Microsoft .NET|.NET platform]] and is the successor to Microsoft's [[Active Server Pages]] (ASP) technology.

ASP.NET is built on the [[Common Language Runtime]], meaning programmers can write ASP.NET code using any [[Microsoft .NET Languages|Microsoft .NET language]].

==ASPX file format==

'''ASPX''' is a text file format used to create [[Form (web)|Webform]] pages;  in programming jargon, the ASPX file typically contains static HTML or XHTML markup, as well as markup defining [[ASP.NET Web Controls|Web Controls]] and [[ASP.NET Web User Controls|Web User Controls]] where the developer places all the required static and dynamic content for the web page.  Additionally, dynamic code which runs on the server can be placed in a page within a block '''<code><nowiki><% -- dynamic code -- %></nowiki></code>''' which is similar to other web development technologies such as [[PHP]], [[JavaServer Pages|JSP]], and [[Active Server Pages|ASP]], but this practice is generally discouraged except for [[Binding (computer science)|Databinding]].

The recommended method for dealing with dynamic program code is to use the [[code-behind]] model, which places this code in a separate file or in a specially designated script tag.  Code-behind files are typically named something to the effect of ''MyPage.aspx.cs'' or ''MyPage.aspx.vb'' based on the ASPX file name (this practice is automatic in [[Microsoft Visual Studio]] and other [[Integrated_development_environment|IDEs]].  When using this style of programming, the developer writes code to respond to different events, like the page being loaded, or a control being clicked, rather than a procedural walk through the document.

===Other files===

Other file extensions associated with different versions of ASP.NET include:

*'''ascx''' - Web UserControls:  custom [[Widget (computing)|controls]] to be placed onto web pages.
*'''asmx''' - [[web service]] pages.
*'''ashx''' - custom [[HTTP]] handlers
*'''master''' - [[ASP master pages|Master Pages]];  introduced in version 2.0
*'''sitemap''' - sitemap configuration files
*'''skin''' - theme skin files
*'''config''' - [[web.config]] is the only file in a specific Web application to use this extension by default ([[machine.config]] similarly affects the entire Web server and all applications on it), however ASP.NET provides facilities to create and consume other config files.  These are stored in [[XML]] format, so as to allow configuration changes to be made with simplicity.
*'''browser''' - browser capabilities files stored in [[XML]] format; introduced in version 2.0. ASP.NET 2 includes many of these by default, to support common web browsers. These specify which browsers have which capabilities, so that ASP.NET 2 can automatically customize and optimize its output accordingly. Special .browser files are available for free download to handle, for instance, the W3C Validator, so that it properly shows standards-compliant pages as being standards-compliant. Replaces the harder-to-use BrowserCaps section that was in [[machine.config]] and could be overridden in [[web.config]] in ASP.NET 1.x.

==Performance==

ASP.NET aims for performance benefits over other script-based technologies ( including ASP Classic ) by compiling the server-side code to one or a few [[dynamic link library|DLL]] [[computer file|file]]s on the [[web server]]. This happens transparently in the background the first time a page is requested (i.e., the developer need not perform a separate compilation step for pages). This provides the ease of development offered by scripting languages with the performance benefits of a compiled binary.

The ASPX and other resource files are placed in a virtual host on an [[Internet Information Services]] ( '''or other compatible ASP.NET servers;  see Other Implementations, below''' ).  The first time a client requests a page, the .NET framework parses and compiles the file(s) into a .NET assembly and sends the response;  subsequent requests are served from the dll files.

Developers can also choose to pre-compile their code before deployment, eliminating the need for just-in-time compilation in a production environment.

==ASP.NET compared to ASP classic==

ASP.NET attempts to simplify developers' transition from [[Microsoft Windows|Windows]] application development to web development by offering the ability to build pages composed of ''[[Widget (computing)|controls]]'' similar to a Windows [[user interface]]. A web control, such as a ''button'' or ''label'', functions in very much the same way as its Windows counterpart: code can assign it properties and respond to its events. Controls know how to render themselves: whereas Windows controls draw themselves to the screen, web controls produce segments of [[HTML]] and [[JavaScript]] which form part of the resulting page sent to the end-user's browser.

ASP.NET encourages the programmer to develop applications using an [[Event-driven programming|event-driven]] [[Graphical user interface|GUI]] paradigm ([[Event-driven programming|event-driven]] [[Graphical user interface|GUI]] model), rather than in conventional web-[[Scripting programming language|scripting]] environments like ASP and [[PHP]]. The framework attempts to combine existing technologies such as JavaScript with internal components like "[[ViewState]]" to bring persistent (inter-request) state to the inherently [[Stateless server|stateless]] web environment.

* Compiled code means applications run faster with more design-time errors trapped at the development stage.
* Significantly improved run-time error handling, making use of [[Exception handling]] using try-catch blocks.
* Similar metaphors to [[Microsoft Windows|Windows]] applications such as controls and events, which make development of rich user interfaces, previously only found on the desktop, possible.
* An extensive set of controls and class libraries allows the rapid building of applications, plus user-defined controls allow commonly used [[template]]s, such as menus.
* ASP.NET leverages the multi-language capabilities of the .NET CLR, allowing web pages to be coded in VB.NET, C#, J#, etc.
* Ability to cache the whole page or just parts of it to improve performance.
* Ability to use the [[code-behind]] development model to separate business logic from presentation.
* If an ASP.NET application [[Memory leak|leaks memory]], the ASP.NET runtime unloads the AppDomain hosting the erring application and reloads the application in a new AppDomain. 
* [[Session state]] in ASP.NET can be saved in a [[Microsoft SQL Server|SQL Server]] database or in a separate process running on the same machine as the web server or on a different machine. That way session values are not lost when the web server is reset or the ASP.NET worker process is recycled.
* Previous versions of ASP.NET (1.0 and 1.1) were criticized for their lack of standards compliance. The generated [[HTML]] and [[JavaScript]] sent to the client browser would not always validate against [[W3C]]/ECMA standards. In addition, the framework's browser detection feature sometimes incorrectly identified web browsers other than Microsoft's own [[Internet Explorer]] as "downlevel" and returned HTML/JavaScript to these clients that was crippled or broken. However, in version 2.0, all controls generate valid [[HTML]] 4.0, [[XHTML]] 1.0 (the default) or [[XHTML]] 1.1 output, depending on the site configuration. Detection of standards-compliant web browsers is more robust and support for [[Cascading Style Sheets]] is more extensive.

==Criticisms of ASP.NET==

ASP Classic and ASP.NET can be run side-by-side in the same web application, which allows developers to migrate applications as needed, instead of all at once.  Unfortunately, pages written using different versions of the ASP framework can't share [[Session State]] without a ''lot'' of work on the programmer's part, or the use of third-party libraries.

Unhandled exceptions force the ASP.NET worker processes to shut down - a fresh WP is loaded and the application is restarted.  This causes the application to lose all data cached in session state and elsewhere;  if the application authenticates users, they will be logged out.  This type of error can be very difficult to [[debug]] in a large application.

ASP.NET 2.0 produces markup that passes W3C validation, but it is debatable as to whether this increases [[Web accessibility|accessibility]], one of the benefits of a semantic xhtml page + css representation.  Several controls (eg. the ''[[Login]]'' controls, the ''Wizard'' control) use html tables for layout by default.  ( ''Microsoft has now gone some way to solve this problem by releasing the [http://www.asp.net/cssadapters/ ASP.NET 2.0 CSS Control Adapters], a free add-on that produces compliant accessible xhtml+css markup.'' ) However, some controls still rely on JavaScript. The CSS Control Adapters do help override output, even if it is to improve HTML, not CSS.

==Development tools==

Several available software packages exist for developing ASP.NET applications:

*[[Microsoft Expression Web Designer]] (available now), part of the forthcoming [[Microsoft Expression Studio]] application suite.
*[[Visual Studio .NET]] or [[Visual Studio 2005]] or [[Visual Web Developer 2005 Express Edition]] (for ASP.NET 2.0)
*[[ASP.NET Web Matrix]] (ASP.NET 1.x only, was free, now no longer supported: replaced by the free [[Visual Web Developer 2005 Express Edition]])
*[[Macromedia Dreamweaver MX]], [[Macromedia Dreamweaver MX 2004]], or [[Macromedia Dreamweaver 8]] (doesn't support ASP.NET 2.0 features, and produces very inefficient code for ASP.NET 1.x: also, code generation and ASP.NET features support through version 8.0.1 was little if any changed from version MX: version 8.0.2 does add changes to improve security against SQL injection attacks)
*[[Macromedia HomeSite]] 5.5 (For ASP Tags)
*[[Microsoft FrontPage|Microsoft SharePoint Designer 12]]
*[[Delphi programming language|Delphi 2006]]
*[[SharpDevelop]] (Free/[[Open Source]])
*Any [[text editor]] such as [[Notepad]], [[Notepad++]], [[UltraEdit]], [[TextPad]], and myriad others.

==History==

{| class="wikitable"
|-
!Date!!Version!!Remarks!!New features
|-
| [[January 16]], [[2002]] || 1.0 || First version<br>
released together with [[Visual Studio .NET]]
|
* [[Object oriented]] web application development supporting [[Inheritance_%28computer_science%29 | Inheritance]], [[Polymorphism_in_object-oriented_programming | Polymorphism]] and other standard OOP features
** Developers are no longer forced to use Server.CreateObject(...), so early-binding and type safety are possible.
* Based on [[Windows]] programming;  the developer can make use of dll class libraries and other features of the web server to build more robust applications that do more than simply rendering html ( ie [[Exception]] logging )
|-
| [[April 24]], [[2003]] 
| 1.1 
| released together with [[Windows Server 2003]]<br>
released together with [[Visual Studio .NET 2003]]
|
* Mobile controls
* Automatic input validation
|-
| [[November 7]], [[2005]] 
| 2.0 
| 
codename [[Whidbey]]<br>
released together with [[Visual Studio 2005]] and [[Microsoft Visual Studio Express|Visual Web Developer Express]]<br>
and [[Microsoft SQL Server|SQL Server 2005]]
| 
* New data controls (GridView, FormView, DetailsView)
* New technique for declarative data access (SqlDataSource, ObjectDataSource, XmlDataSource controls)
* Navigation controls
* [[ASP master pages|Master pages]]
* Login controls
* Themes
* Skins
* Web parts
* Personalization services
* Full pre-compilation
* New localization technique
* Support for 64-bit processors
* Provider class model
|}

==ASP.NET team members==

Various ASP.NET team members maintain blogs. Here are some of them:
* [[Scott Guthrie]], General Manager - [http://weblogs.asp.net/scottgu http://weblogs.asp.net/scottgu]
* [[Nikhil Kothari]], Architect - [http://www.nikhilk.net http://www.nikhilk.net]
* [[Brian Goldfarb]], Product Manager - [http://blogs.msdn.com/bgold http://blogs.msdn.com/bgold]
* [[Shanku Niyogi]], Product Unit Manager - [http://www.shankun.com http://www.shankun.com]
* [[Bertrand Le Roy]], Developer - [http://weblogs.asp.net/bleroy http://weblogs.asp.net/bleroy]

==See also==

* [[Active Server Pages]] (ASP) &ndash; ASP.NET's predecessor
* [[ASP master pages]]
* [[Yellow Screen of Death]] &ndash; ASP.NET's Exception page
* [[Java Server Faces]] (JSF) &ndash;  web application technology with a similar component based approach for the [[Java (programming language)|Java]] plattform

==Resources about ASP.NET==

* ''Pro ASP.NET 2.0 in C# 2005'', [[Matthew MacDonald]], Apress,  November 27, 2005.  ISBN 1-59059-496-7
* ''ASP.NET 2.0 Unleashed'', [[Stephen Walther]], Sams Publishing,  June 6, 2006.  ISBN 0-672-32823-2
* ''Essential ASP.NET With Examples in C#'', Fritz Onion, Addison-Wesley Professional,  February 11, 2003.  ISBN 0-201-76040-1
* ''Programming ASP.NET'', [[Jessy Liberty]] & [[Dan Hurwitz]], O'Reilly, October, 2005. ISBN 0-596-00916-X

==External links==

{{Wikibooks}}
*{{dmoz|Computers/Programming/Internet/ASP/ASP.NET/}}
*[http://bodhost.com/web-hosting/index.php/2007/01/11/asp-net-hosting/ ASP.NET Development Explanations]
*[http://www.dotnetspace.com/ DotNetSpace articles and code examples]

===Microsoft=== 

*[http://www.asp.net/ Microsoft's ASP.NET website] 
*[http://msdn.microsoft.com/asp.net/ ASP.NET on MSDN] 
*[http://www.asp.net/CSSAdapters/ CSS friendly ASP.NET 2.0 control adapters] 
*[http://msdn.microsoft.com/vstudio/express/vwd/ Visual Web Developer Express Edition 2005] 
*[http://www.microsoft.com/products/expression/en/web_designer/default.mspx Microsoft Expression Web Designer (Standards-compliant css-based design)] 
*[http://asp.net/webmatrix/default.aspx?tabIndex=4&tabId=46/ Webmatrix for ASP.NET]

===Other implementations===

*[[Mono (software)|Mono]] - An open source .NET Framework implementation that runs on many platforms
*[[UltiDev Cassini Web Server]]  - A free web server that can be redistributed with ASP.NET 1.1 and 2.0 applications

{{DotNET}}

[[Category:.NET framework]]
[[Category:.NET programming languages]]
[[Category:Template engines]]
[[Category:World Wide Web]]
[[Category:Web application frameworks]]
[[Category:Microsoft APIs]]

[[zh-min-nan:ASP.NET]]
[[cs:ASP.NET]]
[[de:ASP.NET]]
[[es:ASP.NET]]
[[fr:ASP.NET]]
[[it:ASP.NET]]
[[he:ASP.NET]]
[[hu:ASP.NET]]
[[nl:ASP.NET]]
[[no:ASP.NET]]
[[pt:ASP.NET]]
[[ro:ASP.NET]]
[[ru:ASP.NET]]
[[sv:ASP.NET]]
[[th:เอเอสพีดอตเน็ต]]
[[tr:Asp.net]]
[[zh:ASP.NET]]